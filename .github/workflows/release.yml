name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Get dependencies
        run: go mod download

      - name: Get tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          OUTPUT_NAME=waffle-${{ env.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT_NAME="$OUTPUT_NAME.exe"
          fi
          go build -o $OUTPUT_NAME ./cmd/waffle

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: waffle-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./waffle-${{ env.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}*

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: ./waffle-${{ env.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Check out code
      uses: actions/checkout@v3
      
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  test:
    name: Test Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        go-version: ['1.21']
    steps:
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Check out code
      uses: actions/checkout@v3
      
    - name: Get dependencies
      run: go mod download
      
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      
    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.21'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Check out code
      uses: actions/checkout@v3
      
    - name: Get dependencies
      run: go mod download
      
    - name: Build all packages
      run: go build -v ./...
      
    - name: Build standalone executable
      run: go build -o waffle ./cmd/waffle
      
    - name: Upload executable
      uses: actions/upload-artifact@v3
      with:
        name: waffle
        path: ./waffle

  cross-build:
    name: Cross-platform Build
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Check out code
      uses: actions/checkout@v3
      
    - name: Get dependencies
      run: go mod download
      
    - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        OUTPUT_NAME=waffle
        if [ "${{ matrix.goos }}" = "windows" ]; then
          OUTPUT_NAME=waffle.exe
        fi
        go build -o $OUTPUT_NAME-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/waffle
      
    - name: Upload executable
      uses: actions/upload-artifact@v3
      with:
        name: waffle-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./waffle-${{ matrix.goos }}-${{ matrix.goarch }}* 